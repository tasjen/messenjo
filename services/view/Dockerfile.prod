FROM node:20-bookworm AS builder
WORKDIR /app
COPY . .
# install packages
RUN corepack enable && \
    corepack prepare pnpm@latest --activate && \
    pnpm install --frozen-lockfile
# install buf
RUN BIN="/usr/local/bin" VERSION="1.34.0" && \
    curl -sSL \
    "https://github.com/bufbuild/buf/releases/download/v${VERSION}/buf-$(uname -s)-$(uname -m)" \
    -o "${BIN}/buf" && \
    chmod +x "${BIN}/buf"
RUN pnpm run build


FROM gcr.io/distroless/nodejs20-debian12
WORKDIR /app
ENV NODE_ENV=production
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
CMD ["./server.js"]


# an example from nextjs repo

# FROM node:20-alpine AS base

# FROM base AS builder
# WORKDIR /app
# COPY . .
# RUN npm ci
# RUN npm run build

# FROM base AS runner
# WORKDIR /app
# # Don't run production as root
# RUN addgroup --system --gid 1001 nodejs
# RUN adduser --system --uid 1001 view
# USER view
# COPY --from=builder /app/public ./public
# # Automatically leverage output traces to reduce image size
# # https://nextjs.org/docs/advanced-features/output-file-tracing
# COPY --from=builder --chown=view:nodejs /app/.next/standalone ./
# COPY --from=builder --chown=view:nodejs /app/.next/static ./.next/static
# CMD ["node", "server.js"]
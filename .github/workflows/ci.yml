name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-services: ${{ steps.check.outputs.CHANGED_SERVICES_JSON }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Check changed services
        id: check
        run: |
          CHANGED_SERVICES=($(git diff --name-only HEAD~1 HEAD | grep '^services/' | cut -d/ -f2 | sort | uniq))
          CHANGED_SERVICES_JSON=""                              
          for service in "${CHANGED_SERVICES[@]}"; do
            CHANGED_SERVICES_JSON+=",\"$service\""
          done                  
          CHANGED_SERVICES_JSON=[${CHANGED_SERVICES_JSON:1}]  # Remove leading comma
          echo "Changed services: $CHANGED_SERVICES"
          echo "CHANGED_SERVICES_JSON=$CHANGED_SERVICES_JSON" >> $GITHUB_OUTPUT

  build-and-push:
    needs: check-changes
    if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ', '), '#skip') }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJSON(needs.check-changes.outputs.changed-services) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: tasjen
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images if changes detected
        if: contains('auth chat streaming view', matrix.service)
        run: |
          echo "Building Docker image for service '${{ matrix.service }}'"
          docker buildx build \
          --platform linux/amd64,linux/arm64 \
          -t tasjen/messenjo:${{ matrix.service }} \
          -f services/${{ matrix.service }}/Dockerfile.prod services/${{ matrix.service }} \
          --push

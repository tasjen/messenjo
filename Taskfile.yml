version: "3"

vars:
  EC2_IPv4: 54.255.147.96
  HOST: messenjo.tasjen.pro
  EMAIL: tasjen@tasjen.com
  MIGRATE: migrate -path ./services/chatdb/migrations/ -database ${POSTGRESQL_URI/"chatdb:5432/postgres"/"localhost:5432/postgres?sslmode=disable"}
  DEV_COMPOSE: docker-compose.dev.yml
  PROD_COMPOSE: docker-compose.prod.yml

dotenv: ["./services/chat/.env.dev", "./services/chat/.env.prod"]

tasks:
  compose-*:
    cmds:
      - |
        if [ -e {{.DEV_COMPOSE}} ]
        then
          HOST=localhost:3000 docker compose -f {{.DEV_COMPOSE}} {{index .MATCH 0}} {{.ARGS}};
        else
          HOST={{.HOST}} docker compose -f {{.PROD_COMPOSE}} {{index .MATCH 0}} {{.ARGS}};
        fi
    env:
      MY_UID:
        sh: id -u
      MY_GID:
        sh: id -g
    silent: true

  attach:
    cmds:
      - task compose-up ARGS="auth chat streaming view nginx"
    silent: true

  migrate-create:
    cmds:
      - migrate create -seq -ext=.sql -dir=./services/chatdb/migrations {{.LABEL}}
  migrate-version:
    cmds:
      - "{{.MIGRATE}} version"
    silent: true
  migrate-up:
    cmds:
      - "{{.MIGRATE}} -verbose up"
    silent: true
  migrate-goto:
    cmds:
      - "{{.MIGRATE}} -verbose goto {{.VERSION}}"
    silent: true
  migrate-force:
    cmds:
      - "{{.MIGRATE}} -verbose force {{.VERSION}}"
    silent: true

  # dev only
  ssh: # ssh to an ec2 instance
    cmds:
      - ssh -i messenjo.pem ec2-user@{{.EC2_IPv4}}
  push: # pushes all source code required to start a production app to an ec2 instance
    cmds:
      - >
        zip -qr messenjo-prod.zip
        services Taskfile.yml docker-compose.prod.yml .env.prod
        -x "*node_modules*" "*tmp*" "*gen/*" "*.dev*" "*chatdb/data/*"
      - >
        scp -i messenjo.pem messenjo-prod.zip
        ec2-user@{{.EC2_IPv4}}:/home/ec2-user/
      - rm messenjo-prod.zip
    silent: true

  # prod only

  # run this command for getting free SSL certificate from letsencrypt
  cert:
    cmds:
      - EMAIL={{.EMAIL}} DOMAIN={{.HOST}} docker compose -f docker-compose.prod.yml up certbot
    silent: true
